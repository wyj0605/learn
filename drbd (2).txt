rpm -ivh kmod-drbd83-8.3.8-1.el5.centos.i686.rpm
rpm -ivh drbd83-8.3.8-1.el5.centos.i386.rpm

modprobe drbd

lsmod | grep drbd

cp /usr/share/doc/drbd83-8.3.8/drbd.conf /etc/drbd.conf

drbd配置文件
[root@node1 drbd.d]# cat mydrbd.res 
resource mydrbd{
   on node1.wyj.com{
        device  /dev/drbd0;
        disk    /dev/hda5;
        address 192.168.0.102:7789;
        meta-disk internal;
}

   on node2.wyj.com{
        device  /dev/drbd0;
        disk    /dev/hda5;
        address 192.168.0.103:7789;
        meta-disk internal;
   }
}

mknod /dev/drbd0 b 147 0
drbdadm create-md mydrbd  #初始化资源mydrbd，分别在两个节点执行
/etc/init.d/drbd start #启动服务
drbdsetup /dev/drbd0 primary -o   #一个节点设置成主节点。primary
创建文件系统，文件系统只能挂载在primary 节点进行，因此，只能在主节点进行格式化。
mke2fs -j -L DRBD /dev/drbd0 
mkdir /mnt/drbd
mount /dev/drbd0 /mnt/drbd 
cat /proc/drbd 显示两个节点同步过程

cat /proc/drbd
version: 8.3.8 (api:88/proto:86-94)
GIT-hash: d78846e52224fd00562f7c225bcc25b2d422321d build by mockbuild@builder10.centos.org, 2010-06-04 08:04:16
 0: cs:Connected ro:Secondary/Secondary ds:Inconsistent/Inconsistent C r----
    ns:0 nr:0 dw:0 dr:0 al:0 bm:0 lo:0 pe:0 ua:0 ap:0 ep:1 wo:b oos:977124
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
切换方法，先卸载，然后设置成从节点。node2设置成主节点，挂载。
node1
umount -f /mnt/drbd
drbdadm secondary mydrbd #把主节点设置成从节点

node2
service drbd start
drbdadm primary mydrbd
drbd-overview   #查看状态，主从
mkdir /mnt/drbd
mount /dev/drbd0 /mnt/drbd

----------------------------------------------
for I in {1..2}; do scp *.rpm node$I:/root/   #把安装复制到其它节点。


－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
[root@node1 corosync]# ls
cluster-glue-1.0.6-1.6.el5.i386.rpm       libesmtp-1.0.4-5.el5.i386.rpm
cluster-glue-libs-1.0.6-1.6.el5.i386.rpm  openais-1.1.3-1.6.el5.i386.rpm
corosync-1.2.7-1.1.el5.i386.rpm           openaislib-1.1.3-1.6.el5.i386.rpm
corosynclib-1.2.7-1.1.el5.i386.rpm        pacemaker-1.1.5-1.1.el5.i386.rpm
heartbeat-3.0.3-2.3.el5.i386.rpm          pacemaker-cts-1.1.5-1.1.el5.i386.rpm
heartbeat-devel-3.0.3-2.3.el5.i386.rpm    pacemaker-libs-1.1.5-1.1.el5.i386.rpm
heartbeat-libs-3.0.3-2.3.el5.i386.rpm     perl-TimeDate-1.16-5.el5.noarch.rpm
ldirectord-1.0.1-1.el5.i386.rpm           resource-agents-1.0.4-1.1.el5.i386.rpm


yum -y --nogpgcheck localinstall *.rpm 
corosync]# chkconfig drbd off
corosync]# mkdir /var/log/cluster

corosync-keygen

[root@node1 corosync]# vim corosync.conf

# Please read the corosync.conf.5 manual page
compatibility: whitetank

totem {
        version: 2
        secauth: on
        threads: 2
        interface {
                ringnumber: 0
                bindnetaddr: 192.168.0.0
                mcastaddr: 226.94.1.1
                mcastport: 5405
                ttl: 1
        }
}

logging {
        fileline: off
        to_stderr: no
        to_logfile: yes
        to_syslog: yes
        logfile: /var/log/cluster/corosync.log
        debug: off
        timestamp: on
        logger_subsys {
                subsys: AMF
                debug: off
        }
}

amf {
        mode: disabled
}
service {
        ver:  0 
        name: pacemaker
}
aisexec {
        user: root
        group: root
}
